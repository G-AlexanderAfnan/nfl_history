setwd("/Users/alexafnan/Desktop/ISA 401 Project")
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(dplyr)
install.packages("dplyr")
install.packages("tidyverse")
install.packages("dplyr")
read.csv("NFL Tables.csv")
# Create a data frame with the provided data
your_data <- data.frame(
YEAR = 1970:2022,
Passing.Table = paste0("https://www.nfl.com/stats/team-stats/offense/passing/", 1970:2022, "/reg/all"),
Rushing.Table = paste0("https://www.nfl.com/stats/team-stats/offense/rushing/", 1970:2022, "/reg/all")
)
# Display the created data frame
print(your_data)
# Create separate data frames for passing and rushing
passing_data <- data.frame(YEAR = your_data$YEAR, URL = your_data$Passing.Table)
rushing_data <- data.frame(YEAR = your_data$YEAR, URL = your_data$Rushing.Table)
# Display the passing and rushing data frames
print(passing_data)
print(rushing_data)
# Install the required packages
# install.packages("rvest")
# install.packages("dplyr")
# install.packages("tidyr")
# Load the packages
library(rvest)
library(dplyr)
library(tidyr)
# Function to scrape data from a given URL with specific CSS selectors
scrape_data <- function(url, table_selector) {
# Read HTML content from the URL
page <- read_html(url)
# Extract all tables from the HTML using the specified selector
tables <- page %>%
html_nodes(table_selector) %>%
html_table(fill = TRUE)
# Return a list of data frames for each table
return(tables)
}
# Scrape passing data for each year
passing_data <- your_data %>%
rowwise() %>%
mutate(passing_tables = list(scrape_data(Passing.Table, ".d3-l-wrap #main-content .d3-l-section-row .d3-l-grid--inner .d3-l-col__col-12 .d3-o-table--horizontal-scroll"))) %>%
unnest(passing_tables)
# Scrape rushing data for each year
rushing_data <- your_data %>%
rowwise() %>%
mutate(rushing_tables = list(scrape_data(Rushing.Table, ".d3-l-wrap #main-content .d3-l-section-row .d3-l-grid--inner .d3-l-col__col-12 .d3-o-table--horizontal-scroll"))) %>%
unnest(rushing_tables)
# Select only the desired columns in each passing table
passing_data_trimmed <- passing_data %>%
mutate(passing_tables_trimmed = lapply(passing_tables, function(table) {
select(table, Team, Att, `Pass Yds`, TD)
})) %>%
select(-passing_tables) %>%
unnest(passing_tables_trimmed)
# Remove the Passing.Table and Rushing.Table columns
passing_data_trimmed <- passing_data_trimmed %>%
select(-Passing.Table, -Rushing.Table)
# Display the updated passing data
print(passing_data_trimmed)
# Sum the attempted passes for each year
pass_attempts_sum <- passing_data_trimmed %>%
group_by(YEAR) %>%
summarize(Total_Att = sum(Att))
# Display the result
print(pass_attempts_sum)
# Sum the attempted passes for each year
pass_yards_sum <- passing_data_trimmed %>%
group_by(YEAR) %>%
summarize(Total_PassYds = sum(`Pass Yds`))
# Display the result
print(pass_yards_sum)
# Sum the attempted passes for each year
pass_TD_sum <- passing_data_trimmed %>%
group_by(YEAR) %>%
summarize(Total_Att = sum(TD))
# Display the result
print(pass_TD_sum)
# Create a new data frame for the sums
passing_sums <- data.frame(
YEAR = pass_attempts_sum$YEAR,  # Assuming all three data frames have the same years
Total_Att = pass_attempts_sum$Total_Att,
Total_PassYds = pass_yards_sum$Total_PassYds,
Total_TD = pass_TD_sum$Total_Att
)
# Display the resulting table
print(passing_sums)
# Load the ggplot2 package
library(ggplot2)
# Create a time series plot
ggplot(passing_sums, aes(x = YEAR, y = Total_Att)) +
geom_line() +
labs(title = "Total Attempted Passes per Season Over Time",
x = "Year",
y = "Total Attempts")
# Load the ggplot2 package
library(ggplot2)
# Create a time series plot for Total_PassYds
ggplot(passing_sums, aes(x = YEAR, y = Total_PassYds)) +
geom_line() +
labs(title = "Total Passing Yards Over Time",
x = "Year",
y = "Total Passing Yards")
# Load the ggplot2 package
library(ggplot2)
# Create a time series plot for Total_TD
ggplot(passing_sums, aes(x = YEAR, y = Total_TD)) +
geom_line() +
labs(title = "Total Passing Touchdowns Over Time",
x = "Year",
y = "Total Touchdowns")
# Load necessary packages
library(ggplot2)
library(gridExtra)
# Load necessary packages
install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
# Function to calculate and extract slope
calculate_slope <- function(x, y) {
lm_fit <- lm(y ~ x)
coef(lm_fit)[[2]]
}
# Create time series plots for Total_Att, Total_PassYds, and Total_TD
plot_att <- ggplot(passing_sums, aes(x = YEAR, y = Total_Att)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "dashed") +  # Trendline
labs(title = "Total Attempted Passes Over Time",
x = "Year",
y = "Total Attempts",
subtitle = sprintf("Slope: %.2f", calculate_slope(passing_sums$YEAR, passing_sums$Total_Att)))
plot_passyds <- ggplot(passing_sums, aes(x = YEAR, y = Total_PassYds)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "green", linetype = "dashed") +  # Trendline
labs(title = "Total Passing Yards Over Time",
x = "Year",
y = "Total Passing Yards",
subtitle = sprintf("Slope: %.2f", calculate_slope(passing_sums$YEAR, passing_sums$Total_PassYds)))
plot_td <- ggplot(passing_sums, aes(x = YEAR, y = Total_TD)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +  # Trendline
labs(title = "Total Passing Touchdowns Over Time",
x = "Year",
y = "Total Touchdowns",
subtitle = sprintf("Slope: %.2f", calculate_slope(passing_sums$YEAR, passing_sums$Total_TD)))
# Arrange the plots side by side
grid.arrange(plot_att, plot_passyds, plot_td, ncol = 3)
# Select only the desired columns in each rushing table
rushing_data_trimmed <- rushing_data %>%
mutate(rushing_tables_trimmed = lapply(rushing_tables, function(table) {
select(table, Team, Att, `Rush Yds`, TD)
})) %>%
select(-rushing_tables) %>%
unnest(rushing_tables_trimmed)
# Remove the Passing.Table and Rushing.Table columns
rushing_data_trimmed <- rushing_data_trimmed %>%
select(-Passing.Table, -Rushing.Table)
# Display the updated rushing data
print(rushing_data_trimmed)
# Sum the attempted rushes for each year
rush_attempts_sum <- rushing_data_trimmed %>%
group_by(YEAR) %>%
summarize(Total_Att = sum(Att))
# Display the result
print(rush_attempts_sum)
# Sum the rushing yards for each year
rush_yards_sum <- rushing_data_trimmed %>%
group_by(YEAR) %>%
summarize(Total_RushYds = sum(`Rush Yds`))
# Display the result
print(rush_yards_sum)
# Sum the rushing touchdowns for each year
rush_TD_sum <- rushing_data_trimmed %>%
group_by(YEAR) %>%
summarize(Total_TD = sum(TD))
# Display the result
print(rush_TD_sum)
# Create a new data frame for the sums from the rushing data
rushing_sums <- data.frame(
YEAR = rush_attempts_sum$YEAR,  # Assuming all three data frames have the same years
Total_Att = rush_attempts_sum$Total_Att,
Total_RushYds = rush_yards_sum$Total_RushYds,
Total_TD = rush_TD_sum$Total_TD
)
# Display the resulting table
print(rushing_sums)
# Load necessary packages
library(ggplot2)
# Create a time series plot for total rushing attempts
ggplot(rushing_sums, aes(x = YEAR, y = Total_Att)) +
geom_line() +
labs(title = "Total Rushing Attempts Over Time",
x = "Year",
y = "Total Rushing Attempts")
# Load necessary packages
library(ggplot2)
# Create a time series plot for total rushing yards
ggplot(rushing_sums, aes(x = YEAR, y = Total_RushYds)) +
geom_line() +
labs(title = "Total Rushing Yards Over Time",
x = "Year",
y = "Total Rushing Yards")
# Load necessary packages
library(ggplot2)
# Create a time series plot for total rushing touchdowns
ggplot(rushing_sums, aes(x = YEAR, y = Total_TD)) +
geom_line() +
labs(title = "Total Rushing Touchdowns Over Time",
x = "Year",
y = "Total Rushing Touchdowns")
# Load necessary packages
library(ggplot2)
library(gridExtra)
# Create time series plots for Total_Att, Total_RushYds, and Total_TD
plot_att <- ggplot(rushing_sums, aes(x = YEAR, y = Total_Att)) +
geom_line() +
labs(title = "Total Rushing Attempts Over Time",
x = "Year",
y = "Total Attempts")
plot_rushyds <- ggplot(rushing_sums, aes(x = YEAR, y = Total_RushYds)) +
geom_line() +
labs(title = "Total Rushing Yards Over Time",
x = "Year",
y = "Total Rushing Yards")
plot_td <- ggplot(rushing_sums, aes(x = YEAR, y = Total_TD)) +
geom_line() +
labs(title = "Total Rushing Touchdowns Over Time",
x = "Year",
y = "Total Touchdowns")
# Add trendlines and slopes
plot_att <- plot_att + geom_smooth(method = "lm", se = FALSE, color = "red") +
annotate("text", x = Inf, y = Inf, hjust = 1.1, vjust = 1.1,
label = paste("Slope:", round(coef(lm(Total_Att ~ YEAR, data = rushing_sums))[2], 2)),
fontface = "bold")
plot_rushyds <- plot_rushyds + geom_smooth(method = "lm", se = FALSE, color = "blue") +
annotate("text", x = Inf, y = Inf, hjust = 1.1, vjust = 1.1,
label = paste("Slope:", round(coef(lm(Total_RushYds ~ YEAR, data = rushing_sums))[2], 2)),
fontface = "bold")
plot_td <- plot_td + geom_smooth(method = "lm", se = FALSE, color = "green") +
annotate("text", x = Inf, y = Inf, hjust = 1.1, vjust = 1.1,
label = paste("Slope:", round(coef(lm(Total_TD ~ YEAR, data = rushing_sums))[2], 2)),
fontface = "bold")
# Arrange the plots side by side
grid.arrange(plot_att, plot_rushyds, plot_td, ncol = 3)
# Load necessary packages
library(ggplot2)
# Create a time series plot for total attempts (rushing and passing)
ggplot() +
geom_line(data = passing_sums, aes(x = YEAR, y = Total_Att, color = "Passing"), size = 1.5) +
geom_line(data = rushing_sums, aes(x = YEAR, y = Total_Att, color = "Rushing"), size = 1.5) +
labs(title = "Total Attempts Comparison Over Time",
x = "Year",
y = "Total Attempts") +
scale_color_manual(values = c("Passing" = "blue", "Rushing" = "red")) +
theme_minimal()
# Load necessary packages
library(ggplot2)
# Create a time series plot for total yards (rushing and passing)
ggplot() +
geom_line(data = passing_sums, aes(x = YEAR, y = Total_PassYds, color = "Passing"), size = 1.5) +
geom_line(data = rushing_sums, aes(x = YEAR, y = Total_RushYds, color = "Rushing"), size = 1.5) +
labs(title = "Total Yards Comparison Over Time",
x = "Year",
y = "Total Yards") +
scale_color_manual(values = c("Passing" = "blue", "Rushing" = "red")) +
theme_minimal()
# Load necessary packages
library(ggplot2)
# Create a time series plot for total touchdowns (rushing and passing)
ggplot() +
geom_line(data = passing_sums, aes(x = YEAR, y = Total_TD, color = "Passing"), size = 1.5) +
geom_line(data = rushing_sums, aes(x = YEAR, y = Total_TD, color = "Rushing"), size = 1.5) +
labs(title = "Total Touchdowns Comparison Over Time",
x = "Year",
y = "Total Touchdowns") +
scale_color_manual(values = c("Passing" = "blue", "Rushing" = "red")) +
theme_minimal()
# Load necessary packages
library(ggplot2)
library(gridExtra)
# Create time series plots for Total_Att, Total_PassYds, and Total_TD
plot_att <- ggplot() +
geom_line(data = passing_sums, aes(x = YEAR, y = Total_Att, color = "Passing"), size = 1.5) +
geom_line(data = rushing_sums, aes(x = YEAR, y = Total_Att, color = "Rushing"), size = 1.5) +
labs(title = "Total Attempts Comparison Over Time",
x = "Year",
y = "Total Attempts") +
scale_color_manual(values = c("Passing" = "blue", "Rushing" = "red")) +
theme_minimal()
plot_yds <- ggplot() +
geom_line(data = passing_sums, aes(x = YEAR, y = Total_PassYds, color = "Passing"), size = 1.5) +
geom_line(data = rushing_sums, aes(x = YEAR, y = Total_RushYds, color = "Rushing"), size = 1.5) +
labs(title = "Total Yards Comparison Over Time",
x = "Year",
y = "Total Yards") +
scale_color_manual(values = c("Passing" = "blue", "Rushing" = "red")) +
theme_minimal()
plot_td <- ggplot() +
geom_line(data = passing_sums, aes(x = YEAR, y = Total_TD, color = "Passing"), size = 1.5) +
geom_line(data = rushing_sums, aes(x = YEAR, y = Total_TD, color = "Rushing"), size = 1.5) +
labs(title = "Total Touchdowns Comparison Over Time",
x = "Year",
y = "Total Touchdowns") +
scale_color_manual(values = c("Passing" = "blue", "Rushing" = "red")) +
theme_minimal()
# Arrange the plots side by side
grid.arrange(plot_att, plot_yds, plot_td, ncol = 3)
views <- read.csv("Superbowl Views")
views <- read.csv("Superbowl Views.csv")
views <- read.csv("Superbowl Views.csv")
head(views)
# Install and load the ggplot2 package
# install.packages("ggplot2")
library(ggplot2)
# Read the CSV file
views <- read.csv("Superbowl Views.csv")
# Create a time series plot
ggplot(views, aes(x = Year, y = TV.Viewers..millions.)) +
geom_line() +
geom_point() +
labs(title = 'Superbowl Viewership Over Time',
x = 'Year',
y = 'TV Viewers (millions)') +
theme_minimal()
# Install and load the ggplot2 package
# install.packages("ggplot2")
library(ggplot2)
# Read the CSV file
views <- read.csv("Superbowl Views.csv")
# Create a time series plot
ggplot(views, aes(x = Year, y = TV.Viewers..millions.)) +
geom_line() +
geom_point() +
labs(title = 'Superbowl Viewership Over Time',
x = 'Year',
y = 'TV Viewers (millions)') +
scale_x_continuous(breaks = seq(min(views$Year), max(views$Year), by = 10)) +
theme_minimal()
# Install and load the ggplot2 package
# install.packages("ggplot2")
library(ggplot2)
# Read the CSV file
views <- read.csv("Superbowl Views.csv")
# Create a time series plot
ggplot(views, aes(x = Year, y = TV.Viewers..millions.)) +
geom_line() +
geom_point() +
labs(title = 'Superbowl Viewership Over Time',
x = 'Year',
y = 'TV Viewers (millions)') +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(data = allpositions, aes(x = start)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
scale_x_continuous(breaks = seq(min(allpositions$start), max(allpositions$start), by = 10)) +
labs(title = "Distribution of Positions Over Years",
x = "Start Year",
y = "Frequency")
# install.packages("tidyverse")
# install.packages("zoo")
library(tidyverse)
library(zoo)
library(readr)
library(tidyr)
careers <- read_csv('nfl-players.csv')
head(careers)
## Adjust the data taking into account those who played for multiple positions by splitting
## these cases into separate rows for each position listed
# Continue with your data manipulation
allpositions <- careers %>%
select(name, srid, active, positions, start, end) %>%
replace_na(list(positions = '')) %>%
mutate(positions = str_replace(positions, ',|/', '-')) %>%
separate_rows(positions, sep = '-')
head(allpositions)
library(ggplot2)
ggplot(data = allpositions, aes(x = start)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
scale_x_continuous(breaks = seq(min(allpositions$start), max(allpositions$start), by = 10)) +
labs(title = "Distribution of Positions Over Years",
x = "Start Year",
y = "Frequency")
